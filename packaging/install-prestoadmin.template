#!/bin/bash

# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.


set -e

PYTHON_BIN=python

while getopts ":p:" c; do
    case $c in
        p)
            PYTHON_BIN="$OPTARG"
            ;;
        \?)
            echo "Unrecognized option -$OPTARG" >&2
            exit 1
            ;;
        :)
            echo "Option -$OPTARG requires an argument" >&2
            exit 1
            ;;
    esac
done

if [ -d "third-party" ]; then
    tar xvzf third-party/virtualenv-%VIRTUALENV_VERSION%.tar.gz -C third-party || true
    "$PYTHON_BIN" third-party/virtualenv-%VIRTUALENV_VERSION%/virtualenv.py presto-admin-install
else
    wget --no-check-certificate https://pypi.python.org/packages/source/v/virtualenv/virtualenv-%VIRTUALENV_VERSION%.tar.gz
    tar xvzf virtualenv-%VIRTUALENV_VERSION%.tar.gz || true
    "$PYTHON_BIN" virtualenv-%VIRTUALENV_VERSION%/virtualenv.py presto-admin-install
fi

source presto-admin-install/bin/activate
cert_file=$1
# trust pypi.python.org by default, otherwise use cert_file provided
cert_options='--trusted-host pypi.python.org'
if [ -n "$1" ]; then
    if [ ! -f  $cert_file ]; then
        echo "Adding pypi.python.org as trusted-host. Cannot find certificate file: "$cert_file
    else
        cert_options='--cert '$cert_file
    fi
fi

pip install $cert_options %WHEEL_NAME%.whl %ONLINE_OR_OFFLINE_INSTALL%
if ! `"$PYTHON_BIN" -c "import paramiko" > /dev/null 2>&1` ; then
    printf "\nERROR\n"
    echo "Paramiko could not be imported. This usually means that pycrypto (a dependency of paramiko)"
    echo "has been compiled against a different libc version. Ensure the presto-admin installer is "
    echo "built on the same OS as the target installation OS."
    exit 1
fi
deactivate

cat > `pwd`/presto-admin << EOT
#!/bin/bash
export VIRTUAL_ENV="`pwd`/presto-admin-install"
export PATH="\$VIRTUAL_ENV/bin:\$PATH"
unset PYTHON_HOME

exec presto-admin "\$@"
EOT
chmod 755 `pwd`/presto-admin

CONF_DIR=${PRESTO_ADMIN_CONFIG_DIR:-~/.prestoadmin}
mkdir -p "$CONF_DIR"

LOG_DIR=${PRESTO_ADMIN_LOG_DIR:-$CONF_DIR/log}
mkdir -p "$LOG_DIR"

CATALOG_DIR=$CONF_DIR/catalog
mkdir -p "$CATALOG_DIR"

COORDINATOR_DIR=$CONF_DIR/coordinator
mkdir -p "$COORDINATOR_DIR"

WORKERS_DIR=$CONF_DIR/workers
mkdir -p "$WORKERS_DIR"
